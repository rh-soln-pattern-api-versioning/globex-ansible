---

- name: Create usernames
  ansible.builtin.set_fact:
    _users: |
       {{ _users |
       default([]) + [user_prefix + item | string] }}
  loop: "{{ range(1, ((user_count | int) + 1)) | list }}"

- name: "Create {{ user_count }} user namespaces"
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'namespace/namespace.yaml.j2') }}"
  vars:
    _namespaces:
      - "{{ apim_namespace_prefix }}user"
  retries: 10
  delay: 30

- name: "Give {{ user_count }} users access to projects"
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'namespace/rolebinding.yaml.j2') }}"
  vars:
    _bindings:
      - namespace: "{{ apim_namespace_prefix }}user"
        role: "admin"
  retries: 10
  delay: 30

- name: Deploy application
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'apim/apim-application.yaml.j2') }}"
  vars:
    _service_registry_namespace:
      "{{ apim_namespace_prefix }}user"

- name: Retrieve 3scale Admin URL and token for tenant from secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: 3scale-tenant-secret
    namespace: "{{ module_apim_namespace_prefix }}-user1"
  register: _3scale_tenant_secret
  retries: 3
  delay: 5
  until:
    - _3scale_tenant_secret.resources is defined
    - _3scale_tenant_secret.resources | length | int > 0
    - _3scale_tenant_secret.resources[0].data is defined
    - _3scale_tenant_secret.resources[0].data.token is defined
    - _3scale_tenant_secret.resources[0].data.adminURL is defined

- name: Setting 3scale tenant parameters - token and admin url
  ansible.builtin.set_fact:
    _tenant_token: "{{ _3scale_tenant_secret.resources[0].data.token | b64decode }}"
    _tenant_admin_url: "{{ _3scale_tenant_secret.resources[0].data.adminURL | b64decode }}"

- name: Get the GlobexMobile account id
  ansible.builtin.uri:
    method: GET
    url: "{{ _tenant_admin_url }}/admin/api/accounts.json?access_token={{ _tenant_token }}"
    return_content: true
    status_code: 200
  register: _tenant_account_list
  until: _tenant_account_list is defined

- name: Get GlobexMobile Account ID
  ansible.builtin.set_fact:
    _account_id: "{{ _tenant_account_list | to_json | from_json | json_query(query) | first }}"
  vars:
    query: "json.accounts[?contains(account.org_name,'GlobexMobile')].account.id"

- name: Get applications for GlobexMobile Account ID
  ansible.builtin.uri:
    method: GET
    url: "{{ _tenant_admin_url }}/admin/api/accounts/{{ _account_id }}/applications.json?access_token={{ _tenant_token }}"
    return_content: true
    status_code: 200
  register: _application_list
  until: _application_list is defined

- name: Get Application Id of mobile-basic-plan application
  ansible.builtin.set_fact:
    _application_application_id: "{{ _application_list | to_json | from_json | json_query(query) | first }}"
  vars:
    query: "json.applications[?contains(application.name,'mobile-basic-plan')].application.application_id"

- name: Get Id of mobile-basic-plan application
  ansible.builtin.set_fact:
    _application_id: "{{ _application_list | to_json | from_json | json_query(query) | first }}"
  vars:
    query: "json.applications[?contains(application.name,'mobile-basic-plan')].application.id"

- name: Patch mobile web depoyment env with application id
  ansible.builtin.command:
    argv:
      - oc
      - set
      - env
      - deployments/globex-mobile
      - -n
      - "{{ module_apim_namespace_prefix }}-user1"
      - --overwrite
      - "API_CLIENT_ID={{ _application_application_id }}"

- name: Set the redirect URL on the application
  ansible.builtin.uri:
    method: PUT
    url: "{{ _tenant_admin_url }}/admin/api/accounts/{{ _account_id }}/applications/{{ _application_id }}.xml?access_token={{ _tenant_token }}"
    return_content: true
    status_code: 200
    body_format: form-urlencoded
    body:
      - [access_token, "{{ _tenant_token }}"]
      - [name, "mobile-basic-plan"]
      - [redirect_url, "*"]

- name: Get a token for the admin-cli client of the SSO realm
  ansible.builtin.uri:
    method: POST
    url: "https://sso.{{ r_openshift_subdomain }}/realms/globex-user1/protocol/openid-connect/token"
    return_content: true
    status_code: 200
    body_format: form-urlencoded
    body:
      - [username, "user1"]
      - [password, "openshift"]
      - [grant_type, "password"]
      - [client_id, "admin-cli"]
  register: _sso_token
  until: _sso_token

- name: Set admin token
  ansible.builtin.set_fact:
    _sso_admin_token: "{{ _sso_token | to_json | from_json | json_query('json.access_token') }}"

- name: Get client id of SSO client
  ansible.builtin.uri:
    method: GET
    url: "https://sso.{{ r_openshift_subdomain }}/admin/realms/globex-user1/clients"
    headers:
      Authorization: Bearer {{ _sso_admin_token }}
      Accept: application/json
    return_content: true
    status_code: 200
  register: _sso_client_list
  until: _sso_client_list is defined

- name: Get Id of sso client
  ansible.builtin.set_fact:
    _sso_client_id: "{{ _sso_client_list | to_json | from_json | json_query(query) | first }}"
  vars:
    query: "json[?contains(clientId, '{{ _application_application_id }}')].id"

- name: Set weborigins for sso client
  ansible.builtin.uri:
    method: PUT
    url: "https://sso.{{ r_openshift_subdomain }}/admin/realms/globex-user1/clients/{{ _sso_client_id }}"
    headers:
      Authorization: Bearer {{ _sso_admin_token }}
    body_format: json
    body: '{ "webOrigins": ["https://globex-mobile-globex-apim-user1.{{ r_openshift_subdomain }}"] }'
    return_content: true
    status_code: 204

- name: Get Product Id for globex-mobile-gateway-product
  kubernetes.core.k8s_info:
    api_version: capabilities.3scale.net/v1beta1
    kind: Product
    name: "{{ module_apim_mobile_gateway_product }}"
    namespace: "{{ module_apim_namespace_prefix }}-user1"
  register: r_globex_mobile_gateway_product
  retries: 10
  delay: 10
  until:
    - r_globex_mobile_gateway_product is defined
    - r_globex_mobile_gateway_product.resources | length | int > 0
    - r_globex_mobile_gateway_product.resources[0].status is defined
    - r_globex_mobile_gateway_product.resources[0].status.productId is defined

- name: Set product id
  ansible.builtin.set_fact:
    _mobile_gateway_product_id: "{{ r_globex_mobile_gateway_product.resources[0].status.productId }}"

- name: Promote globex-mobile-gateway-product to staging
  ansible.builtin.uri:
    method: POST
    url: "{{ _tenant_admin_url }}/admin/api/services/{{ _mobile_gateway_product_id }}/proxy/deploy.json?access_token={{ _tenant_token }}"
    return_content: true
    status_code: 201
    body_format: form-urlencoded
    body:
      - [access_token, "{{ _tenant_token }}"]

- name: Get the latest proxy config
  ansible.builtin.uri:
    method: GET
    url: "{{ _tenant_admin_url }}/admin/api/services/{{ _mobile_gateway_product_id }}/proxy/configs/sandbox/latest.json?access_token={{ _tenant_token }}"
    return_content: true
    status_code: 200
  register: r_proxy_config

- name: Set latest proxy config
  ansible.builtin.set_fact:
    _mobile_gateway_product_proxy_config: "{{ r_proxy_config.json.proxy_config.version }}"

- name: Promote globex-mobile-gateway-product to production
  ansible.builtin.uri:
    method: POST
    url: "{{ _tenant_admin_url }}/admin/api/services/{{ _mobile_gateway_product_id }}/proxy/configs/sandbox/{{ _mobile_gateway_product_proxy_config }}/promote.json"
    return_content: true
    status_code: 201
    body_format: form-urlencoded
    body:
      - [access_token, "{{ _tenant_token }}"]
      - [to, "production"]
